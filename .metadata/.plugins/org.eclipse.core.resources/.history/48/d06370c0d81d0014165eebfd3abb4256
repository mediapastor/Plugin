package com.tdgc.cocos2dx.popup.creator.xml;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringWriter;

import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;

import com.tdgc.cocos2dx.popup.creator.constants.Device;
import com.tdgc.cocos2dx.popup.creator.model.View;

public class XmlFileBuilder {
	
	public XmlFileBuilder(String pImagesPath) {
		this.mImagesPath = pImagesPath;
	}
	
	public void buildFor(String pDevice) {
		mXmlCreator = new XmlCreator(this.mImagesPath);
		Document doc = mXmlCreator.parseFilePaths();
		
		this.mFileOutputPath = "resources/xml/" + pDevice 
				+ "/" + mXmlCreator.getOutputFileName();
		
		// write the content into xml file
		TransformerFactory transformerFactory = TransformerFactory.newInstance();
		transformerFactory.setAttribute("indent-number", 4);
		Transformer transformer = null;
		try {
			transformer = transformerFactory.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, "yes");
			DOMSource source = new DOMSource(doc);
			StreamResult result = new StreamResult(new StringWriter());
				 
			// Output to console for testing
//			StreamResult result = null;
//			result = new StreamResult(new FileWriter(
//					new File(this.mFileOutputPath)));
			transformer.transform(source, result);
			
			System.out.println(result);
			
		} catch (TransformerConfigurationException e1) {
			e1.printStackTrace();
		} catch (TransformerException e) {
			e.printStackTrace();
		}
	}
	
	public String getOutputFilePath() {
		return this.mFileOutputPath;
	}
	
	private XmlCreator mXmlCreator;
	private String mFileOutputPath;
	private String mImagesPath;
	
	
//	public static void main(String[] args) {
//		String inputPath = "/Users/apple/Downloads/Skype/Leaderboard/iPhone";
//		String inputDirectory ="leaderboard_popup";
//		String device = Device.IPHONE;
//		XmlFileBuilder builder = new XmlFileBuilder(inputPath + "/" + inputDirectory);
//		builder.buildFor(device);
//		XmlFetcher fetcher = new XmlFetcher();
//		View view = fetcher.fetchView("resources/xml/" + device + "/" + inputDirectory + ".xml");
//		System.out.println(view.declarePositions());
//		System.out.println(view.implementPositions());
//		System.out.println(view.declare());
//		System.out.println(view.implement(false));
//		view.exportXibTemplate(Device.IPHONE);
//		view.exportScreenTemplate(Device.IPADHD);
//		view.export();
//	}
}
