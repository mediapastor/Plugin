#
# create templates
#

#Common class declaring template

/**
* This file is auto generated by TVD Tools
* {class_name}.h
* {project_name}
*
* Created by {author} on {created_date}
*
**/

#ifndef __{project_name}__{class_name}__
#define __{project_name}__{class_name}__

//{n}
#include "cocos-ext.h"

//{n}
#include "{super_name}.h"
#include "Defines.h"

//{n}
using namespace std;
using namespace cocos2d;
using namespace cocos2d::extension;

//{n}
class {class_name} : public {super_name} {

public:
	static Scene* createScene(//{parameters}
							);
	static {class_name}* create(//{parameters}
							);
    
    virtual bool init(//{parameters}
    				);	
    
    virtual bool onTouchBegan(Touch *pTouch, Event *pEvent);
    virtual void onTouchMoved(Touch *pTouch, Event *pEvent);
    virtual void onTouchEnded(Touch *pTouch, Event *pEvent);
    virtual void onTouchCancelled(Touch *pTouch, Event *pEvent);
 
 protected:
    virtual void addSprites();
    virtual void addLabels();
    virtual void addMenus();
    virtual void addMenuItems();
    virtual void addProgressBars();
    virtual void addActions();
    virtual void addTables();
    
private:
	enum MenuItemTag {
		//{menuitem_tags}
	};
	
	void {class_name_prefix}MenuItemCallback(Ref *pSender);
	
	//{extend_functions}
	
	//{custom_source_code}

	//{properties_declare}

};

#endif /* defined(__{project_name}__{class_name}__) */

#end

#Common extend table class declaring template

/**
* This file is auto generated by Twin Dragons Tools
* {class_name}.h
* {project_name}
*
* Created by {author} on {created_date}
*
**/

#ifndef __{project_name}__{class_name}__
#define __{project_name}__{class_name}__

//{n}
#include "cocos-ext.h"

//{n}
#include "{super_name}.h"
#include "{super_table_name}.h"
#include "Defines.h"

//{n}
using namespace std;
using namespace cocos2d;
using namespace cocos2d::extension;

//{n}
class {super_cell_name};
class TableView;

//{n}
class {class_name} : public {super_name}, public {super_table_name} {

public:
	static {class_name}* create(//{parameters},
							string pBackgroundImage = D::id.{background_id},
                            string pExitNormalImage = "",
                            string pExitSelectedImage = "");
    
    virtual bool init(//{parameters}
    				string pBackgroundImage = D::id.{background_id},
                    string pExitNormalImage = "",
                    string pExitSelectedImage = "");	
                    
   	virtual {super_cell_name}* createTableViewCellAt(const int &idx);
 
 protected:
    virtual void addSprites();
    virtual void addLabels();
    virtual void addMenus();
    virtual void addMenuItems();
    virtual void addProgressBars();
    virtual void addActions();
    virtual void addTables();
    
private:
	enum MenuItemTag {
		//{menuitem_tags}
	};
	
	void {class_name_prefix}MenuItemCallback(CCObject *pSender);
	
	//{extend_functions}

	//{custom_source_code}

	//{properties_declare}

};

#endif /* defined(__{project_name}__{class_name}__) */

#end

#=====================================================================
#
# create templates
#

#Common class implementing template
/**
* This file is auto generated by TVD Tools
* {class_name}.cpp
* {project_name}
*
* Created by {author} on {created_date}
*
**/

#include "{class_name}.h"
#include "{super_name}.h"
#include "GameParams.h"

//{n}
Scene* {class_name}::createScene(//{parameters}
								) {
    {class_name}* layer = {class_name}::create(//{importing_params},
  											);
    Scene* pRet = Scene::create();
    pRet->addChild(layer);
    
    return pRet;
}

//{n}
{class_name}* {class_name}::create(//{parameters}
								) {
    {class_name}* pRet = new {class_name}();
    pRet->autorelease();
    pRet->init(//{importing_params},
    		);
    
    return pRet;
}

//{n}
bool {class_name}::init(//{parameters}
					) {             
	//{assigning_area}
	
    {super_name}::init();
    
    return true;
}

//{n}
void {class_name}::addMenuItems() {
    {super_name}::addMenuItems();
    
    //{add_menuitems}
}

//{n}
void {class_name}::addMenus() {
    {super_name}::addMenus();
    
    //{add_menus}
}

//{n}
void {class_name}::addSprites() {
	{super_name}::addSprites();
   
   	//{add_sprites}
}

//{n}
void {class_name}::addLabels() {
	{super_name}::addLabels();	

   //{add_labels}
}

//{n}
void {class_name}::addProgressBars() {
	{super_name}::addProgressBars();
	
	//{add_progressbars}
}

//{n}
void {class_name}::addTables() {
	{super_name}::addTables();
	
	//{add_tables}
}

//{n}
void {class_name}::addActions() {
    {super_name}::addActions();
    
    //{add_actions}
}

//{n}
//{extend_functions}

//{n}
bool {class_name}::onTouchBegan(Touch *pTouch, Event *pEvent) {
    return {super_name}::onTouchBegan(pTouch, pEvent);
}

//{n}
void {class_name}::onTouchMoved(Touch *pTouch, Event *pEvent) {
    {super_name}::onTouchMoved(pTouch, pEvent);
    
}

//{n}
void {class_name}::onTouchEnded(Touch *pTouch, Event *pEvent) {
    {super_name}::onTouchEnded(pTouch, pEvent);
}

//{n}
void {class_name}::onTouchCancelled(Touch *pTouch, Event *pEvent) {
    {super_name}::onTouchCancelled(pTouch, pEvent);
}

//{n}
void {class_name}::{class_name_prefix}MenuItemCallback(Ref *pSender) {
    
    MenuItem* menuItem = static_cast<MenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        //{menuitem_cases}
    }
}

//{n}
//{custom_source_code}

#end

#Common extend table class implementing template
/**
* This file is auto generated by Twin Dragons Tools
* {class_name}.cpp
* {project_name}
*
* Created by {author} on {created_date}
*
**/

#include "{class_name}.h"
#include "{super_name}.h"
#include "{super_cell_name}.h"
#include "TableView.h"
#include "GameParams.h"

//{extend_class}

//{n}
{class_name}* {class_name}::create(//{parameters},
							string pBackgroundImage,
							string pExitNormalImage,
							string pExitSelectedImage) {
    {class_name}* pRet = new {class_name}();
    pRet->autorelease();
    pRet->init(//{importing_params}
    		pBackgroundImage, 
    		pExitNormalImage, 
    		pExitSelectedImage);
    
    return pRet;
}

//{n}
bool {class_name}::init(//{parameters},
							string pBackgroundImage,
							string pExitNormalImage,
                            string pExitSelectedImage) {             
	//{assigning_area}
	
    {super_name}::init(pBackgroundImage,
                     pExitNormalImage,
                     pExitSelectedImage,
                     GPARAMS()->POP_COMMON_EXIT_BUTTON_POSITION);
    setBackgroundPosition(VisibleRect::center());
    
    return true;
}

//{n}
void {class_name}::addMenus() {
	{super_name}::addMenus();
    
    //{add_menus}
}

//{n}
void {class_name}::addMenuItems() {
    {super_name}::addMenuItems();
    
    //{add_menuitems}
}

//{n}
void {class_name}::addSprites() {
	{super_name}::addSprites();
   
   	//{add_sprites}
}

//{n}
void {class_name}::addLabels() {
	{super_name}::addLabels();	

   //{add_labels}
}

//{n}
void {class_name}::addProgressBars() {
	{super_name}::addProgressBars();
	
	//{add_progressbars}
}

//{n}
void {class_name}::addTables() {
	{super_name}::addTables();
	
	//{add_tables}
}

//{n}
void {class_name}::addActions() {
    {super_name}::addActions();
    
    //{add_actions}
}

//{n}
{super_cell_name}* {class_name}::createTableViewCellAt(const int &idx) {
    {super_cell_name} *pRet = {cell_class_name}::create(idx);
    
    return pRet;
}

//{n}
//{extend_functions}

//{n}
void {class_name}::{class_name_prefix}MenuItemCallback(CCObject *pSender) {
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        //{menuitem_cases}
    }
}

//{n}
//{custom_source_code}

#end