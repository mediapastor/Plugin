#
# create templates
#

#ITableCellView class declaring template
/**
* This file is auto generated by Twin Dragons Tools
* {class_name}.cpp
* {project_name}
*
* Created by {author} on {created_date}
*
**/

class {class_name} : public {super_name} {
public:
	static {class_name}* create(//{parameters},
							const int &idx);
	virtual bool init(//{parameters},
					const int &idx = 0);
	virtual void update(const int &idx);
protected:
	virtual void addSprites();
    virtual void addLabels();
    virtual void addMenus();
    virtual void addMenuItems();
    
    virtual void updateSprites(const int &idx);
    virtual void updateLabels(const int &idx);
    virtual void updateMenuItems(const int &idx);
private:
	enum ElementTag {
		//{element_tags}
	};
	void {class_name_prefix}MenuItemCallback(CCObject *pSender);
	//{properties_declare}
	//{extend_functions_declaring}
};

#end

#ITableCellView class implementing template

//{n}
{class_name}* {class_name}::create(//{parameters},
										const int &idx) {
    {class_name}* pRet = new {class_name}();
    pRet->autorelease();
    pRet->init(//{importing_params},
    		idx);
    
    return pRet;
}

//{n}
bool {class_name}::init(//{parameters},
							const int &idx) {             
	//{assigning_area}
	
    return {super_name}::init(idx);
}

//{n}
void {class_name}::addMenus() {
	{super_name}::addMenus();
    
    //{add_menus}
}

//{n}
void {class_name}::addMenuItems() {
    {super_name}::addMenuItems();
    
    //{add_menuitems}
}

//{n}
void {class_name}::addSprites() {
	{super_name}::addSprites();
   
   	//{add_sprites}
}

//{n}
void {class_name}::addLabels() {
	{super_name}::addLabels();	

   //{add_labels}
}

//{n}
void {class_name}::updateSprites(const int &idx) {
	{super_name}::updateSprites(idx);
	
	//{update_sprites}
}

//{n}
void {class_name}::updateLabels(const int &idx) {
	{super_name}::updateLabels(idx);
	
	//{update_labels}
}

//{n}
void {class_name}::updateMenuItems(const int &idx) {
	{super_name}::updateMenuItems(idx);
	
	//{update_menuitems}
}

//{n}
void {class_name}::update(const int &idx) {
	{super_name}::update(idx);
	
	//{update_cell_view}
}

//{n}
//{extend_functions_implementing}

//{n}
void {class_name}::{class_name_prefix}MenuItemCallback(CCObject *pSender) {
    
    CCMenuItem* menuItem = static_cast<CCMenuItem*>(pSender);
        
    switch (menuItem->getTag()) {
        //{menuitem_cases}
    }
}

#end
